* Land detector State

# https://docs.px4.io/master/en/advanced_config/land_detector.html

In order to detect landing, the multicopter first has to go through three different states, where each state contains the conditions from the previous states plus tighter constraints. If a condition cannot be reached because of missing sensors, then the condition is true by default. For instance, in Acro mode and no sensor is active except for the gyro sensor, then the detection solely relies on thrust output and time.

In order to proceed to the next state, each condition has to be true for some predefined time. If one condition fails, the land detector drops out of the current state immediately.


** Ground Contact

This state is reached if following conditions are true for 0.35 seconds:

    no vertical movement (LNDMC_Z_VEL_MAX)
    no horizontal movement (LNDMC_XY_VEL_MAX)
    lower thrust than MPC_THR_MIN + (MPC_THR_HOVER - MPC_THR_MIN) * LNDMC_LOW_T_THR, or velocity setpoint is 0.9 of land speed but vehicle has no vertical movement.

If the vehicle is in position- or velocity-control and ground contact was detected, the position controller will set the thrust vector along the body x-y-axis to zero.

** Maybe Landed

This state is reached if following conditions are true for 0.25 seconds:

    all conditions of ground contact are true
    is not rotating (LNDMC_ROT_MAX)
    has low thrust MPC_THR_MIN + (MPC_THR_HOVER - MPC_THR_MIN) * 0.1

If the vehicle only has knowledge of thrust and angular rate, in order to proceed to the next state the vehicle has to have low thrust and no rotation for 8.0 seconds.

If the vehicle is in position or velocity control and maybe landed was detected, the position controller will set the thrust vector to zero.

** Landed

This state is reached if following conditions are true for 0.3 seconds:

    all conditions of maybe landed are true






* Path planning
** Pure pursuit Controller
https://www.mathworks.com/help/nav/ug/pure-pursuit-controller.html

** Waypoint Trajectory

https://www.mathworks.com/help/nav/ref/waypointtrajectory-system-object.html
** Waypoint Follower
https://www.mathworks.com/help/robotics/ref/waypointfollower.html
