#+TITLE: Documentation



So our drone is a line-following robot (LFR) that needs to identify waypoint, calculate a trajectory, and traverse through the path as quickly as possible.

We have an IMU (Inertial Measurement Unit) as well as a Monocular Camera.
- The IMU returns an accurate estimate of state for small time intervals, but suffers from large drift due to integrating the inertial sensor measurements.
- The visual odometry is good for long-term estimation but is inaccurate for short time intervals.

By creating a tightly-coupled control framework, we can utilize the complimentary characteristics of our sensors to create a UAS that is capable of localization, perception, control, and path planning. VI odometry, the topic described earlier, has been an active research topic thanks to cheap sensors and better embedded microcontrollers - we'll be utilizing a bunch of previous research to make our model. In the process, we'll be making documentation that explains everything for a noob - it's a very broad topic that takes way too much time to figure out.



* Matlab

| AtmosphereBus
| CommandBus
| EnvironmentBus
| extraSensorData_t


- CommandBus
  - controlModePosVSOrient
  - pos_ref
  - takeoff_flag
  - orient_ref
  - live_time_ticks
- EnvironmentBus
  - Gravity_ned
  - MagneticField_ned
  - AtmosphereBus
    - air_temp
    - speed_sound
    - pressure
    - air_density
- extraSensorData_t


** Hardware Abstraction Layer

| Workspace Variable  | Sensor Source | Other Description    |
|---------------------+---------------+----------------------|
| HAL_acc_SI_t        | IMU           |                      |
| HAL_fifo_gyro_SI_t  | IMU           |                      |
| HAL_gyro_SI_t       | IMU           |                      |
| HAL_magn_mG_t       | IMU           |                      |
| HAL_acquisition_t   |               | Aggregate/Collection |
| HAL_command_t       |               | State flags/sink     |
| HAL_pressure_SI_t   |               | Environment          |
| HAL_ultrasound_SI_t | ultrasound    |                      |
| HAL_list_echo_t     | ultrasound    |                      |
| HAL_echo_t          | ultrasound    |                      |
| HAL_vbat_SI_t       |               | battery              |


- HAL_acc_SI_t
  - x
  - y
  - z
  - T
- HAL_command_t
- HAL_echo_t
- HAL_fifo_gyro_SI_t
  - x
  - y
  - z
- HAL_gyro_SI_t
  - x
  - y
  - z
  - temperature
  - temperature_lsb
- HAL_list_echo_t
- HAL_magn_mG_t
  - x
  - y
  - z
- HAL_pressure_SI_t
  - temperature
  - pressure
- HAL_ultrasound_SI_t
  - altitude
  - raw_altitude
  - nb_echo
  - measure_ref
  - measure_status
  - new_data
- HAL_vbat_SI_t
  - vbat_V
  - vbat_percentage

** Kinematics
*** States Bus
These are all 3x1 arrays

- V_body
- Omega_body
- Euler
- Accel_body
- dOmega_body
- V_ned
- X_ned
- LLA
- DCM_be

*** statesEstim_t
- X
- Y
- Z
- yaw
- pitch
- roll
- dx
- dy
- dz
- p
- q
- r

* Appendix
** Useful papers?

[1] Herbert Bay, Andreas Ess, Tinne Tuytelaars, and Luc Van Gool.
Speeded-up robust features (surf). Comput. Vis. Image Underst.,
110(3):346–359, June 2008.

[2] Timothy A Davis, John R Gilbert, Stefan I Larimore, and Esmond G
Ng. Algorithm 836: Colamd, a column approximate minimum degree
ordering algorithm. ACM Transactions on Mathematical Software
(TOMS), 30(3):377–380, 2004.

[3] Andrew J Davison, Ian D Reid, Nicholas D Molton, and Olivier
Stasse. Monoslam: Real-time single camera slam. IEEE transactions
on pattern analysis and machine intelligence, 29(6):1052–1067, 2007.

[4] Frank Dellaert and Michael Kaess. Square root sam: Simultaneous
localization and mapping via square root information smoothing. The
International Journal of Robotics Research, 25(12):1181–1203, 2006.

[5] Dorian Gálvez-López and Juan D Tardos. Bags of binary words for fast
place recognition in image sequences. IEEE Transactions on Robotics,
28(5):1188–1197, 2012.

[6] Andreas Geiger, Philip Lenz, and Raquel Urtasun. Are we ready for
autonomous driving? the kitti vision benchmark suite. In Conference
on Computer Vision and Pattern Recognition (CVPR), 2012.

[7] Richard Hartley and Andrew Zisserman. Multiple view geometry in
computer vision second edition. Cambridge University Press, 2000.

[8] Michael Kaess, Ananth Ranganathan, and Frank Dellaert. isam:
Incremental smoothing and mapping. IEEE Transactions on Robotics,
24(6):1365–1378, 2008.

[9] Georg Klein and David Murray. Parallel tracking and mapping for
small ar workspaces. In Mixed and Augmented Reality, 2007. ISMAR
2007. 6th IEEE and ACM International Symposium on, pages 225–
234. IEEE, 2007.

[10] Georg Klein and David Murray. Parallel tracking and mapping for
small AR workspaces. In Proc. Sixth IEEE and ACM International
Symposium on Mixed and Augmented Reality (ISMAR’07), Nara,
Japan, November 2007.

[11] Etienne Mouragnon, Maxime Lhuillier, Michel Dhome, Fabien
Dekeyser, and Patrick Sayd. Real time localization and 3d recon-
struction. In Computer Vision and Pattern Recognition, 2006 IEEE
Computer Society Conference on, volume 1, pages 363–370. IEEE,
2006.

[12] Raul Mur-Artal, Jose Maria Martinez Montiel, and Juan D Tardos.
Orb-slam: a versatile and accurate monocular slam system. IEEE
Transactions on Robotics, 31(5):1147–1163, 2015.[13] Hauke Strasdat, Andrew J Davison, JM Martı̀nez Montiel, and Kurt
Konolige. Double window optimisation for constant time visual slam.
In Computer Vision (ICCV), 2011 IEEE International Conference on,
pages 2352–2359. IEEE, 2011.

[14] Hauke Strasdat, JMM Montiel, and Andrew J Davison. Scale drift-
aware large scale monocular slam. Robotics: Science and Systems VI,
2, 2010.

[15] Bill Triggs, Philip F McLauchlan, Richard I Hartley, and Andrew W
Fitzgibbon. Bundle adjustmenta modern synthesis. In International
workshop on vision algorithms, pages 298–372. Springer, 1999.
